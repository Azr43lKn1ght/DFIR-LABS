import sys, json, hashlib
from random import randint


banner = """


████████╗██╗░░██╗███████╗  ███╗░░░███╗░█████╗░██╗░░░░░░██╗░░░░░░░██╗░█████╗░██████╗░███████╗
╚══██╔══╝██║░░██║██╔════╝  ████╗░████║██╔══██╗██║░░░░░░██║░░██╗░░██║██╔══██╗██╔══██╗██╔════╝
░░░██║░░░███████║█████╗░░  ██╔████╔██║███████║██║░░░░░░╚██╗████╗██╔╝███████║██████╔╝█████╗░░
░░░██║░░░██╔══██║██╔══╝░░  ██║╚██╔╝██║██╔══██║██║░░░░░░░████╔═████║░██╔══██║██╔══██╗██╔══╝░░
░░░██║░░░██║░░██║███████╗  ██║░╚═╝░██║██║░░██║███████╗░░╚██╔╝░╚██╔╝░██║░░██║██║░░██║███████╗
░░░╚═╝░░░╚═╝░░╚═╝╚══════╝  ╚═╝░░░░░╚═╝╚═╝░░╚═╝╚══════╝░░░╚═╝░░░╚═╝░░╚═╝░░╚═╝╚═╝░░╚═╝╚══════╝

░█████╗░██████╗░██╗░░░██╗░██████╗░█████╗░██████╗░███████╗
██╔══██╗██╔══██╗██║░░░██║██╔════╝██╔══██╗██╔══██╗██╔════╝
██║░░╚═╝██████╔╝██║░░░██║╚█████╗░███████║██║░░██║█████╗░░
██║░░██╗██╔══██╗██║░░░██║░╚═══██╗██╔══██║██║░░██║██╔══╝░░
╚█████╔╝██║░░██║╚██████╔╝██████╔╝██║░░██║██████╔╝███████╗
░╚════╝░╚═╝░░╚═╝░╚═════╝░╚═════╝░╚═╝░░╚═╝╚═════╝░╚══════╝
                                                            
"""

with open("answers.json", "r") as ansFile:
    answers = json.load(ansFile)

scoreboard = []

print(banner)


def sanitize(inpString):
    inpString = str(inpString).strip()
    return inpString


def askQn(number, question, format):
    global scoreboard

    print(f"Q{number}) {question}")
    print(f"Format: {format}\n")

    answer = sanitize(input("Answer: "))

    if (
        hashlib.md5(answer.encode()).hexdigest()
        == hashlib.md5(answers[number].encode()).hexdigest()
    ):
        print("Correct!\n")
        scoreboard.append(True)
    else:
        print("Wrong answer!\nExiting...")
        sys.exit()


def main():
    global scoreboard

    # ----- ask qns here -----
    askQn(
        "1",
        "What is the value of the registry entry that was stored by the macro?",
        "",
    )
    askQn(
        "2",
        "What is the first command that was sent to C2 victim from the C2 server?",
        "",
    )
    askQn(
        "3",
        "What is the md5 hash of the important document that he had compressed and stored {md5(file)}?",
        "",
    )
    askQn(
        "4",
        "What is the md5 hash of the important document that he had compressed and stored {md5(file)}?",
        "", 
    )
    askQn(
        "5",
        "The can you find out where the user stores his secrests online",
        "",    
    )
    askQn(
        "6",
        "The user noted down the password to unlock private secret storage and forgot to save it can you recover it ?",
        "",
    )
    askQn(
        "7",
        "What is inside the private secret storage ? ",
        "",
    )
        
    # ----- end qns -----

    printFlag = True
    for i in scoreboard:
        printFlag and i


    if printFlag:
        print(answers["flag"])


if __name__ == "__main__":
    try:
        main()
    except Exception:
        print("Something went wrong!\nExiting...")
        sys.exit()
